---
import BaseHead from '::BaseHead.astro';
import Header from '::Header';
import Footer from '::Footer';
import ProjectsList from '::ProjectsList';

import { SITE_TITLE, SITE_DESCRIPTION, GITHUB_TOKEN } from '~config';

const query = `query GetGitHubRepositoryInfo($query: String!) {
  search(type: REPOSITORY, query: $query, first: 100) {
    nodes {
      ... on Repository {
        description
        isFork
        forkCount
        stargazerCount
        homepageUrl
        isArchived
        isMirror
        isPrivate
        isTemplate
        repositoryTopics(first: 10) {
          totalCount
          nodes {
            topic {
              name
            }
          }
        }
        languages(first: 5, orderBy: { field: SIZE, direction: DESC }) {
          totalCount
          edges {
            size
            node {
              color
              name
            }
          }
          totalSize
        }
        licenseInfo {
          name
        }
        nameWithOwner
        createdAt
        url
      }
    }
  }
}
`;

const projectLocations = (await Astro.glob('./projects.json'))[0];
const githubProjectsQuery = Object.entries<string[]>(projectLocations.github)
  .flatMap(([owner, repos]) => repos.map((repo) => `repo:${owner}/${repo}`))
  .join(' ');

const githubProjectDetails = import.meta.env.DEV
  ? (await Astro.glob('./sample.github.json'))[0]
  : await (
      await fetch('https://api.github.com/graphql', {
        headers: {
          Authorization: `Bearer ${GITHUB_TOKEN}`,
        },
        method: 'POST',
        body: JSON.stringify({
          operationName: 'GetGitHubRepositoryInfo',
          query,
          variables: { query: githubProjectsQuery },
        }),
      })
    ).json();

const projects = githubProjectDetails?.data?.search?.nodes?.sort(
  (a: { createdAt: string }, b: { createdAt: string }) =>
    Date.parse(b.createdAt) - Date.parse(a.createdAt),
);
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body class="dark:bg-slate-900">
    <Header />
    <main
      class="mt-12 prose prose-sm sm:prose-base md:prose-lg lg:prose-xl xl:prose-2xl dark:prose-invert prose-slate mx-auto p-4"
    >
      <div class="p-4">
        <h1>Index</h1>
        or see <a href="https://github.com/umstek" target="_blank">GitHub</a>
        <ProjectsList projects={projects} />
      </div>
    </main>
    <Footer />
  </body>
</html>
