<div id="comments" class="mt-8">
  <script
    id="giscus-script"
    src="https://giscus.app/client.js"
    data-repo="umstek/umstek.github.io"
    data-repo-id="MDEwOlJlcG9zaXRvcnk2NjI1NjkzNQ=="
    data-category="Comments"
    data-category-id="DIC_kwDOA_MAJ84CR_9a"
    data-mapping="pathname"
    data-strict="1"
    data-reactions-enabled="1"
    data-emit-metadata="1"
    data-input-position="top"
    data-theme="preferred_color_scheme"
    data-lang="en"
    data-loading="eager"
    crossorigin="anonymous"
    is:inline
    async></script>
  <div class="giscus"></div>
</div>

<script is:inline>
  /**
   * Synchronise giscus theme with site theme
   */
  const applyGiscusTheme = () => {
    const iframe = document.querySelector("iframe.giscus-frame");
    if (!iframe) return;

    // Get theme from data-theme attribute instead of class
    const theme =
      document.documentElement.getAttribute("data-theme") === "dark"
        ? "dark"
        : "light";

    iframe.contentWindow?.postMessage(
      {
        giscus: {
          setConfig: { theme },
        },
      },
      "https://giscus.app"
    );
  };

  // Function to wait for giscus iframe to load
  const waitForGiscusAndApplyTheme = () => {
    const checkForIframe = () => {
      const iframe = document.querySelector("iframe.giscus-frame");
      if (iframe) {
        applyGiscusTheme();
      } else {
        // Retry after a short delay if iframe not found
        setTimeout(checkForIframe, 100);
      }
    };
    checkForIframe();
  };

  // Watch for iframe creation using MutationObserver
  const observeGiscusIframe = () => {
    const observer = new MutationObserver(mutations => {
      mutations.forEach(mutation => {
        mutation.addedNodes.forEach(node => {
          if (
            node.nodeType === Node.ELEMENT_NODE &&
            node.tagName === "IFRAME" &&
            node.classList.contains("giscus-frame")
          ) {
            // Small delay to ensure iframe is fully loaded
            setTimeout(applyGiscusTheme, 500);
          }
        });
      });
    });

    const giscusContainer = document.querySelector(".giscus");
    if (giscusContainer) {
      observer.observe(giscusContainer, { childList: true, subtree: true });
    }
  };

  // Initial setup
  window.addEventListener("load", () => {
    observeGiscusIframe();
    // Also try immediate application in case iframe is already there
    setTimeout(waitForGiscusAndApplyTheme, 1000);
  });

  // Update on theme changes - listen to the same events as toggle-theme.js
  window.addEventListener("load", () => {
    // Listen for theme button clicks
    document.querySelector("#theme-btn")?.addEventListener("click", () => {
      // Wait a bit for the theme to be applied, then sync giscus
      setTimeout(applyGiscusTheme, 100);
    });

    // Also listen for system theme changes
    window
      .matchMedia("(prefers-color-scheme: dark)")
      .addEventListener("change", () => {
        setTimeout(applyGiscusTheme, 100);
      });
  });

  // Listen for astro navigation events
  document.addEventListener("astro:after-swap", () => {
    observeGiscusIframe();
    setTimeout(waitForGiscusAndApplyTheme, 1000);
  });
</script>
