{"version":3,"file":"component---src-pages-index-tsx-c691ae43d533f058224d.js","mappings":"mHAEA,aAAe,OAAGA,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAT,OACb,qBACEA,UAAW,CAAC,sCAAuCA,GAChDC,QAAO,SAACC,GAAD,QAASA,KAChBC,KAAK,MAHV,MAKMJ,K,0ECoDR,IAtDkB,SAAC,GAAD,IAAGK,EAAH,EAAGA,MAAH,OAChB,gCACGA,EAAMC,KAAI,SAACC,GACV,IAAMC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KAEpD,OACE,sBAAIC,IAAKL,EAAKG,OAAOC,MACnB,2BACEV,UAAU,qDACVY,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YACX,uBAAKd,UAAU,sCACb,qBACEA,UAAU,0CACVe,KAAI,SAAWT,EAAKG,OAAOC,MAE1BH,KAIP,uBAAKP,UAAU,kDACb,gBAAC,IAAD,CACEA,UAAU,eACVD,KAAMO,EAAKE,YAAYT,OAEzB,uBAAKC,UAAU,oDACXM,EAAKE,YAAYQ,MAAQ,IAAIX,KAAI,SAACY,GAAD,OACjC,gBAAC,IAAD,CACEN,IAAKM,EACLA,KAAMA,EACNC,KAAI,SAAW,IAAUD,GAArB,YAMd,2BACEH,SAAS,cACTd,UAAU,6CAEV,qBAAGc,SAAS,eACTR,EAAKE,YAAYW,aAAeb,EAAKc,kB,uDCtChDC,EAAM,SAAC,GAA4D,IAAD,MAAzDF,EAAyD,EAAzDA,YAAaG,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,KAAMhB,EAAgC,EAAhCA,MAAOiB,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC/CC,GAASC,EAAAA,EAAAA,gBAAe,cAAxBD,KAgBFE,EAAkBT,GAAeO,EAAKG,aAAaV,YACnDW,EAAY,UAAGJ,EAAKG,oBAAR,aAAG,EAAmBtB,MAExC,OACE,gBAAC,IAAD,CACEwB,eAAgB,CACdT,KAAAA,GAEFf,MAAOA,EACPyB,cAAeF,EAAY,QAAWA,OAAiBG,EACvDV,KAAM,CACJ,CACEN,KAAK,cACLiB,QAASN,GAEX,CACEO,SAAS,WACTD,QAAS3B,GAEX,CACE4B,SAAS,iBACTD,QAASN,GAEX,CACEO,SAAS,UACTD,QAAQ,WAEV,CACEC,SAAS,SACTD,QAASV,MAAAA,OAAF,EAAEA,EAAUT,MAErB,CACEoB,SAAS,WACTD,QAAQ,IAAIV,MAAAA,OAAL,EAAKA,EAAUY,QAASX,GAEjC,CACEU,SAAS,YACTD,QAAQ,IAAIV,MAAAA,OAAL,EAAKA,EAAUY,QAASX,GAEjC,CACER,KAAK,eACLiB,QAAQ,WAEV,CACEjB,KAAK,kBACLiB,SAAS,UAAAR,EAAKG,oBAAL,mBAAmBQ,cAAnB,eAA2BC,UAA3B,IAEX,CACErB,KAAK,gBACLiB,QAAS3B,GAEX,CACEU,KAAK,sBACLiB,QAASN,IAEXW,OAAOhB,MAKfF,EAAImB,aAAe,CACjBlB,KAAK,KACLC,KAAM,GACNJ,YAAY,IAUd,O,wECpEA,UA3BkB,SAAC,GAAwB,IAAD,EAArBsB,EAAqB,EAArBA,KAAMjB,EAAe,EAAfA,SACnBkB,GAAY,UAAAD,EAAKf,KAAKG,oBAAV,eAAwBtB,QAAxB,QACZH,EAAQqC,EAAKE,OAAOC,MAE1B,OAAqB,IAAjBxC,EAAMyC,OAEN,gBAAC,IAAD,CAAQrB,SAAUA,EAAUjB,MAAOmC,GACjC,gBAAC,IAAD,CAAKnC,MAAM,cACX,uLAUJ,gBAAC,IAAD,CAAQiB,SAAUA,EAAUjB,MAAOmC,GACjC,gBAAC,IAAD,CAAKnC,MAAM,cACX,sBAAIuC,MAAO,CAAEC,UAAU,SACrB,gBAAC,IAAD,CAAW3C,MAAOA","sources":["webpack://umstek/./src/components/DateDisplay/index.tsx","webpack://umstek/./src/components/PostsList/index.tsx","webpack://umstek/./src/components/seo.tsx","webpack://umstek/./src/pages/index.tsx"],"sourcesContent":["import React from \"react\";\n\nexport default ({ date, className }: { date: string; className?: string }) => (\n  <p\n    className={[\"text-center uppercase text-gray-600\", className]\n      .filter((c) => !!c)\n      .join(\" \")}\n  >\n    ðŸ“… {date}\n  </p>\n);\n","import React from \"react\";\nimport { kebabCase } from \"lodash\";\n\nimport DateDisplay from \"../DateDisplay\";\nimport Tag from \"../Tag\";\n\nconst PostsList = ({ posts }) => (\n  <>\n    {posts.map((post) => {\n      const title = post.frontmatter.title || post.fields.slug;\n\n      return (\n        <li key={post.fields.slug}>\n          <article\n            className=\"px-4 sm:px-8 md:px-0 container mx-auto mt-16 mb-32\"\n            itemScope\n            itemType=\"http://schema.org/Article\" // TechArticle, NewsArticle, BlogPosting\n          >\n            <header>\n              <h1 itemProp=\"headline\">\n                <div className=\"text-3xl text-center text-gray-700\">\n                  <a\n                    className=\"px-2 hover:bg-gray-700 hover:text-white\"\n                    href={`/posts${post.fields.slug}`}\n                  >\n                    {title}\n                  </a>\n                </div>\n              </h1>\n              <div className=\"mt-2 flex flex-row justify-center items-center\">\n                <DateDisplay\n                  className=\"mr-4 text-sm\"\n                  date={post.frontmatter.date}\n                />\n                <div className=\"overflow-x-auto overflow-y-hidden flex flex-row\">\n                  {(post.frontmatter.tags || []).map((name) => (\n                    <Tag\n                      key={name}\n                      name={name}\n                      link={`/tags/${kebabCase(name)}/`}\n                    />\n                  ))}\n                </div>\n              </div>\n            </header>\n            <section\n              itemProp=\"articleBody\"\n              className=\"mx-auto mt-2 prose prose-blue lg:prose-lg\"\n            >\n              <p itemProp=\"description\">\n                {post.frontmatter.description || post.excerpt}\n              </p>\n            </section>\n          </article>\n        </li>\n      );\n    })}\n  </>\n);\n\nexport default PostsList;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nconst SEO = ({ description, lang, meta, title, location, imageURL }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : undefined}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          property: `og:url`,\n          content: location?.href,\n        },\n        {\n          property: `og:image`,\n          content: `${location?.origin}${imageURL}`,\n        },\n        {\n          property: `fb:app_id`,\n          content: `${location?.origin}${imageURL}`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n};\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport PostsList from \"../components/PostsList\";\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n  const posts = data.allMdx.nodes;\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <ol style={{ listStyle: `none` }}>\n        <PostsList posts={posts} />\n      </ol>\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          tags\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`;\n"],"names":["date","className","filter","c","join","posts","map","post","title","frontmatter","fields","slug","key","itemScope","itemType","itemProp","href","tags","name","link","description","excerpt","SEO","lang","meta","location","imageURL","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","undefined","content","property","origin","social","twitter","concat","defaultProps","data","siteTitle","allMdx","nodes","length","style","listStyle"],"sourceRoot":""}