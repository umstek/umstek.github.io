name: main

env:
  PUBLIC_SITE: ${{ secrets.PUBLIC_SITE }}
  PUBLIC_SITE_TITLE: ${{ secrets.PUBLIC_SITE_TITLE }}
  PUBLIC_SITE_DESCRIPTION: ${{ secrets.PUBLIC_SITE_DESCRIPTION }}
  PUBLIC_OWNER: ${{ secrets.PUBLIC_OWNER }}
  PUBLIC_START_YEAR: ${{ secrets.PUBLIC_START_YEAR }}
  PUBLIC_MAINTENANCE_NOTICE: ${{ secrets.PUBLIC_MAINTENANCE_NOTICE }}
  PUBLIC_LICENSE_NOTICE: ${{ secrets.PUBLIC_LICENSE_NOTICE }}
  PUBLIC_TWITTER: ${{ secrets.PUBLIC_TWITTER }}
  PUBLIC_GITHUB: ${{ secrets.PUBLIC_GITHUB }}
  X_GITHUB_TOKEN: ${{ secrets.X_GITHUB_TOKEN }}

on:
  # Trigger the workflow every time you push to the `main` branch
  # Using a different branch name? Replace `main` with your branchâ€™s name
  push:
    branches: [main]
  # Allows you to run this workflow manually from the Actions tab on GitHub.
  workflow_dispatch:

# Allow this job to clone the repo and create a page deployment
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: install node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      #   # use astro check for issues
      # - name: Run check
      #   run: pnpm astro check

        # ensure build works
      - name: Run build
        run: pnpm build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
