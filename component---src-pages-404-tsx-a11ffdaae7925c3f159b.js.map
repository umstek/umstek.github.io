{"version":3,"sources":["webpack://umstek/./src/components/seo.tsx","webpack://umstek/./src/pages/undraw_empty_xct9.svg","webpack://umstek/./src/pages/404.tsx"],"names":["SEO","description","lang","meta","title","location","imageURL","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","undefined","name","content","property","href","origin","social","twitter","concat","defaultProps","data","siteTitle","className","xlinkHref","svgPath","A"],"mappings":"uIAYMA,EAAM,SAAC,GAA4D,IAAD,MAAzDC,EAAyD,EAAzDA,YAAaC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC/CC,GAASC,oBAAe,cAAxBD,KAgBFE,EAAkBR,GAAeM,EAAKG,aAAaT,YACnDU,EAAY,UAAGJ,EAAKG,oBAAR,aAAG,EAAmBN,MAExC,OACE,gBAAC,IAAD,CACEQ,eAAgB,CACdV,QAEFE,MAAOA,EACPS,cAAeF,EAAY,QAAWA,OAAiBG,EACvDX,KAAM,CACJ,CACEY,KAAK,cACLC,QAASP,GAEX,CACEQ,SAAS,WACTD,QAASZ,GAEX,CACEa,SAAS,iBACTD,QAASP,GAEX,CACEQ,SAAS,UACTD,QAAQ,WAEV,CACEC,SAAS,SACTD,QAASX,aAAF,EAAEA,EAAUa,MAErB,CACED,SAAS,WACTD,QAAQ,IAAIX,aAAL,EAAKA,EAAUc,QAASb,GAEjC,CACEW,SAAS,YACTD,QAAQ,IAAIX,aAAL,EAAKA,EAAUc,QAASb,GAEjC,CACES,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,SAAS,UAAAT,EAAKG,oBAAL,mBAAmBU,cAAnB,eAA2BC,UAA3B,IAEX,CACEN,KAAK,gBACLC,QAASZ,GAEX,CACEW,KAAK,sBACLC,QAASP,IAEXa,OAAOnB,MAKfH,EAAIuB,aAAe,CACjBrB,KAAK,KACLC,KAAM,GACNF,YAAY,IAUd,O,2HCtGA,EAAe,IAA0B,gECqCzC,EA5BqB,SAAC,GAAwB,IAAtBuB,EAAqB,EAArBA,KAAMnB,EAAe,EAAfA,SACtBoB,EAAYD,EAAKjB,KAAKG,aAAaN,MAEzC,OACE,gBAAC,IAAD,CAAQC,SAAUA,EAAUD,MAAOqB,GACjC,gBAAC,IAAD,CAAKrB,MAAM,mBACX,uBAAKsB,UAAU,4CACb,uBAAKA,UAAU,6FACb,yBACEA,UAAU,yEACVC,UAAWC,KAGf,uBAAKF,UAAU,0CACb,qBAAGA,UAAU,8EAAb,mBAGA,wBAAMA,UAAU,sBACd,gBAACG,EAAA,EAAD,CAAGX,KAAK,IAAIQ,UAAU,2CAAtB","file":"component---src-pages-404-tsx-a11ffdaae7925c3f159b.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nconst SEO = ({ description, lang, meta, title, location, imageURL }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : undefined}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          property: `og:url`,\n          content: location?.href,\n        },\n        {\n          property: `og:image`,\n          content: `${location?.origin}${imageURL}`,\n        },\n        {\n          property: `fb:app_id`,\n          content: `${location?.origin}${imageURL}`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n};\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","export default __webpack_public_path__ + \"static/undraw_empty_xct9-c8301e2ab508b7ed9a3396b80adca305.svg\";","import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport A from \"../components/A\";\n\nimport svgPath from \"./undraw_empty_xct9.svg\";\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"404: Not Found\" />\n      <div className=\"flex flex-col md:flex-row justify-center\">\n        <svg className=\"h-48 w-48 sm:h-64 sm:w-64 md:h-72 md:w-72 lg:h-96 lg:w-96 mx-8 my-8 lg:my-16 fill-current\">\n          <image\n            className=\"h-48 w-48 sm:h-64 sm:w-64 md:h-72 md:w-72 lg:h-96 lg:w-96 fill-current\"\n            xlinkHref={svgPath}\n          />\n        </svg>\n        <div className=\"mx-8 my-8 flex flex-col justify-center\">\n          <p className=\"px-2 text-blue-600 font-light text-3xl sm:text-4xl md:text-5xl lg:text-6xl\">\n            Page not found.\n          </p>\n          <span className=\"mt-4 flex flex-row\">\n            <A href=\"/\" className=\"px-2 hover:bg-gray-700 hover:text-white\">\n              Go to homepage\n            </A>\n          </span>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default NotFoundPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}