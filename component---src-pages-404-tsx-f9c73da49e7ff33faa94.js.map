{"version":3,"sources":["webpack:///./src/pages/undraw_empty_xct9.svg","webpack:///./src/components/seo.tsx","webpack:///./src/pages/404.tsx"],"names":["module","exports","SEO","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps","NotFoundPage","data","location","siteTitle","className","xlinkHref","svgPath","href"],"mappings":"gFAAAA,EAAOC,QAAU,IAA0B,iE,kCCA3C,iDAYMC,EAAM,SAAC,GAAuC,UAArCC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC9BC,EAASC,yBAAe,cAAxBD,KAgBFE,EAAkBN,GAAeI,EAAKG,aAAaP,YACnDQ,EAAY,UAAGJ,EAAKG,oBAAR,aAAG,EAAmBJ,MAExC,OACE,kBAAC,IAAD,CACEM,eAAgB,CACdR,QAEFE,MAAOA,EACPO,cAAeF,EAAe,QAAQA,EAAiB,KACvDN,KAAM,CACJ,CACES,KAAM,cACNC,QAASN,GAEX,CACEO,SAAU,WACVD,QAAST,GAEX,CACEU,SAAU,iBACVD,QAASN,GAEX,CACEO,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,SAAS,UAAAR,EAAKG,oBAAL,mBAAmBO,cAAnB,eAA2BC,UAA3B,IAEX,CACEJ,KAAM,gBACNC,QAAST,GAEX,CACEQ,KAAM,sBACNC,QAASN,IAEXU,OAAOd,MAKfH,EAAIkB,aAAe,CACjBhB,KAAM,KACNC,KAAM,GACNF,YAAa,IAUAD,O,oCC1Ff,yFAqCemB,UA5BM,SAAC,GAAuB,IAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACtBC,EAAYF,EAAKf,KAAKG,aAAaJ,MAEzC,OACE,kBAAC,IAAD,CAAQiB,SAAUA,EAAUjB,MAAOkB,GACjC,kBAAC,IAAD,CAAKlB,MAAM,mBACX,yBAAKmB,UAAU,4CACb,yBAAKA,UAAU,6FACb,2BACEA,UAAU,yEACVC,UAAWC,OAGf,yBAAKF,UAAU,0CACb,uBAAGA,UAAU,8EAAb,mBAGA,0BAAMA,UAAU,sBACd,kBAAC,IAAD,CAAGG,KAAK,IAAIH,UAAU,2CAAtB","file":"component---src-pages-404-tsx-f9c73da49e7ff33faa94.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/undraw_empty_xct9-cfb49f55eb8da55ee5e66a7587b12849.svg\";","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst SEO = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport A from \"../components/A\";\n\nimport svgPath from \"./undraw_empty_xct9.svg\";\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"404: Not Found\" />\n      <div className=\"flex flex-col md:flex-row justify-center\">\n        <svg className=\"h-48 w-48 sm:h-64 sm:w-64 md:h-72 md:w-72 lg:h-96 lg:w-96 mx-8 my-8 lg:my-16 fill-current\">\n          <image\n            className=\"h-48 w-48 sm:h-64 sm:w-64 md:h-72 md:w-72 lg:h-96 lg:w-96 fill-current\"\n            xlinkHref={svgPath}\n          />\n        </svg>\n        <div className=\"mx-8 my-8 flex flex-col justify-center\">\n          <p className=\"px-2 text-blue-600 font-light text-3xl sm:text-4xl md:text-5xl lg:text-6xl\">\n            Page not found.\n          </p>\n          <span className=\"mt-4 flex flex-row\">\n            <A href=\"/\" className=\"px-2 hover:bg-gray-700 hover:text-white\">\n              Go to homepage\n            </A>\n          </span>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default NotFoundPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}