{"version":3,"sources":["webpack:///path---text-cases-in-programming-c8dafe5d09c04dcca38e.js","webpack:///./.cache/json/text-cases-in-programming.json"],"names":["webpackJsonp","401","module","exports","data","markdownRemark","html","timeToRead","excerpt","frontmatter","title","cover","date","category","tags","fields","slug","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,gzNAAAC,WAAA,EAAAC,QAAA,wIAAAC,aAAspOC,MAAA,4BAAAC,MAAA,+CAAAC,KAAA,4BAAAC,SAAA,cAAAC,MAAA,uHAAqRC,QAAWC,KAAA,gCAAsCC,aAAgBD,KAAA","file":"path---text-cases-in-programming-c8dafe5d09c04dcca38e.js","sourcesContent":["webpackJsonp([190520934657878],{\n\n/***/ 401:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>When coding, text cases become an important factor if you want to maintain your code up to a high standard, following best practices. Different languages follow different naming conventions for variables, constants etc. Here we discuss some of the different types of text casing and their usages in some popular languages. </p>\\n<h2 id=\\\"camel-case\\\"><a href=\\\"#camel-case\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Camel Case</h2>\\n<p>Spaces are omitted and first letter of each word is capitalized. Looks like a camel with multiple humps. Other names: <em>Pascal Case</em>, <em>Bumpy Caps</em>, <em>Upper Camel Case</em>.<br>\\ne.g.: <code>CreateCatDetailsPage</code>, <code>GiveMeAHug</code>, <code>XmlHttpRequest</code> <em>(Note how popular abbreviations are converted.)</em><br>\\n<strong>C#/VB <em>(VB is case insensitive)</em> method names</strong>  </p>\\n<h2 id=\\\"headless-camel-case\\\"><a href=\\\"#headless-camel-case\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Headless Camel Case</h2>\\n<p>Spaces are omitted and first letter of each word except the first word is capitalized. As implied by the name, looks like a camel without its head.<br>\\ne.g.: <code>getCatDetails</code>, <code>giveMeAHug</code><br>\\n<strong>Java method and variable names</strong>  </p>\\n<h2 id=\\\"snake-case\\\"><a href=\\\"#snake-case\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Snake Case</h2>\\n<p>Looks like snakes, with the words of phrases are separated with undescores (<code>_</code>) rather than spaces.<br>\\ne.g.: <code>get_snake_details</code>, <code>give_me_a_hug</code><br>\\n<strong>Python/Ruby function and variable names</strong>  </p>\\n<h2 id=\\\"screaming-snake-case\\\"><a href=\\\"#screaming-snake-case\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Screaming Snake Case</h2>\\n<p>Screaming most of the time means making all the text uppercase. This case is the same as snake case except that all letters are capitalized.<br>\\ne.g.: <code>SNAKE_SPEED_FACTOR</code>, <code>MAX_SNAKE_AGE</code><br>\\n<strong>In most programming languages, constants are named using screaming snake case.</strong>  </p>\\n<h2 id=\\\"kebab-case--lisp-case\\\"><a href=\\\"#kebab-case--lisp-case\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Kebab Case / Lisp Case</h2>\\n<p>This one does not have a standard name but called with various names like <em>Caterpillar Case</em>, <em>Spine Case</em>, or just <em>Hyphenated</em>.<br>\\ne.g.: <code>max-time-limit</code>, <code>font-family</code><br>\\n<strong>CSS, Lisp</strong></p>\\n<h2 id=\\\"train-case\\\"><a href=\\\"#train-case\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Train Case</h2>\\n<p>This one is the same as the above, but first letters of all words are capitalized.<br>\\ne.g.: <code>Train-Case</code>  </p>\\n<h2 id=\\\"cobol-case\\\"><a href=\\\"#cobol-case\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>COBOL Case</h2>\\n<p>Looks more like a screaming Lisp case. Hyphenated words with all caps.<br>\\ne.g.: <code>MAGIC-NUMBER</code><br>\\n<strong>COBOL</strong>  </p>\\n<h2 id=\\\"studly-caps\\\"><a href=\\\"#studly-caps\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Studly Caps</h2>\\n<p>Uppercase letters and lowercase letters are mixed. I'm just curious whether this is used in any kind of programming.<br>\\ne.g.: <code>StUdLyCaPs</code>  </p>\\n<hr>\\n<p>If you know of more, or if you want to add anything, need clarifications, please comment below. :smile:  </p>\",\"timeToRead\":2,\"excerpt\":\"When coding, text cases become an important factor if you want to maintain your code up to a high standard, following best practicesâ€¦\",\"frontmatter\":{\"title\":\"Text Cases in Programming\",\"cover\":\"https://unsplash.it/400/300/?random?BoldMage\",\"date\":\"2017-01-16 11:12:22 +0530\",\"category\":\"conventions\",\"tags\":[\"naming conventions\",\"camel case\",\"snake case\",\"kebab case\",\"train case\",\"cobol case\",\"best practices\",\"programming\"]},\"fields\":{\"slug\":\"/text-cases-in-programming\"}}},\"pathContext\":{\"slug\":\"/text-cases-in-programming\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---text-cases-in-programming-c8dafe5d09c04dcca38e.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>When coding, text cases become an important factor if you want to maintain your code up to a high standard, following best practices. Different languages follow different naming conventions for variables, constants etc. Here we discuss some of the different types of text casing and their usages in some popular languages. </p>\\n<h2 id=\\\"camel-case\\\"><a href=\\\"#camel-case\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Camel Case</h2>\\n<p>Spaces are omitted and first letter of each word is capitalized. Looks like a camel with multiple humps. Other names: <em>Pascal Case</em>, <em>Bumpy Caps</em>, <em>Upper Camel Case</em>.<br>\\ne.g.: <code>CreateCatDetailsPage</code>, <code>GiveMeAHug</code>, <code>XmlHttpRequest</code> <em>(Note how popular abbreviations are converted.)</em><br>\\n<strong>C#/VB <em>(VB is case insensitive)</em> method names</strong>  </p>\\n<h2 id=\\\"headless-camel-case\\\"><a href=\\\"#headless-camel-case\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Headless Camel Case</h2>\\n<p>Spaces are omitted and first letter of each word except the first word is capitalized. As implied by the name, looks like a camel without its head.<br>\\ne.g.: <code>getCatDetails</code>, <code>giveMeAHug</code><br>\\n<strong>Java method and variable names</strong>  </p>\\n<h2 id=\\\"snake-case\\\"><a href=\\\"#snake-case\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Snake Case</h2>\\n<p>Looks like snakes, with the words of phrases are separated with undescores (<code>_</code>) rather than spaces.<br>\\ne.g.: <code>get_snake_details</code>, <code>give_me_a_hug</code><br>\\n<strong>Python/Ruby function and variable names</strong>  </p>\\n<h2 id=\\\"screaming-snake-case\\\"><a href=\\\"#screaming-snake-case\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Screaming Snake Case</h2>\\n<p>Screaming most of the time means making all the text uppercase. This case is the same as snake case except that all letters are capitalized.<br>\\ne.g.: <code>SNAKE_SPEED_FACTOR</code>, <code>MAX_SNAKE_AGE</code><br>\\n<strong>In most programming languages, constants are named using screaming snake case.</strong>  </p>\\n<h2 id=\\\"kebab-case--lisp-case\\\"><a href=\\\"#kebab-case--lisp-case\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Kebab Case / Lisp Case</h2>\\n<p>This one does not have a standard name but called with various names like <em>Caterpillar Case</em>, <em>Spine Case</em>, or just <em>Hyphenated</em>.<br>\\ne.g.: <code>max-time-limit</code>, <code>font-family</code><br>\\n<strong>CSS, Lisp</strong></p>\\n<h2 id=\\\"train-case\\\"><a href=\\\"#train-case\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Train Case</h2>\\n<p>This one is the same as the above, but first letters of all words are capitalized.<br>\\ne.g.: <code>Train-Case</code>  </p>\\n<h2 id=\\\"cobol-case\\\"><a href=\\\"#cobol-case\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>COBOL Case</h2>\\n<p>Looks more like a screaming Lisp case. Hyphenated words with all caps.<br>\\ne.g.: <code>MAGIC-NUMBER</code><br>\\n<strong>COBOL</strong>  </p>\\n<h2 id=\\\"studly-caps\\\"><a href=\\\"#studly-caps\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Studly Caps</h2>\\n<p>Uppercase letters and lowercase letters are mixed. I'm just curious whether this is used in any kind of programming.<br>\\ne.g.: <code>StUdLyCaPs</code>  </p>\\n<hr>\\n<p>If you know of more, or if you want to add anything, need clarifications, please comment below. :smile:  </p>\",\"timeToRead\":2,\"excerpt\":\"When coding, text cases become an important factor if you want to maintain your code up to a high standard, following best practicesâ€¦\",\"frontmatter\":{\"title\":\"Text Cases in Programming\",\"cover\":\"https://unsplash.it/400/300/?random?BoldMage\",\"date\":\"2017-01-16 11:12:22 +0530\",\"category\":\"conventions\",\"tags\":[\"naming conventions\",\"camel case\",\"snake case\",\"kebab case\",\"train case\",\"cobol case\",\"best practices\",\"programming\"]},\"fields\":{\"slug\":\"/text-cases-in-programming\"}}},\"pathContext\":{\"slug\":\"/text-cases-in-programming\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/text-cases-in-programming.json\n// module id = 401\n// module chunks = 190520934657878"],"sourceRoot":""}