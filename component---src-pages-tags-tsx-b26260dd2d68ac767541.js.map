{"version":3,"sources":["webpack://umstek/./src/pages/tags.tsx"],"names":["data","group","allMdx","title","site","siteMetadata","location","className","itemProp","map","tag","name","fieldValue","link","kebabCase","count","totalCount"],"mappings":"2KA4DA,UAnDiB,SAAC,GAOX,IAAD,IANJA,KACYC,EAKR,EALFC,OAAUD,MAEQE,EAGhB,EAJFC,KACEC,aAAgBF,MAIpB,OACE,gBAAC,IAAD,CAAQG,SAAQ,QAAWH,MAAOA,GAChC,uBAAKI,UAAU,SACb,gBAAC,IAAD,CAAQJ,MAAOA,IACf,2BACE,sBAAIK,SAAS,YACX,uBAAKD,UAAU,sCACb,wBAAMA,UAAU,QAAhB,UAGJ,uBAAKA,UAAU,gFACZN,EAAMQ,KAAI,SAACC,GAAD,OACT,gBAAC,IAAD,CACEC,KAAMD,EAAIE,WACVC,KAAI,SAAWC,IAAUJ,EAAIE,YAAzB,IACJG,MAAOL,EAAIM","file":"component---src-pages-tags-tsx-b26260dd2d68ac767541.js","sourcesContent":["import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport kebabCase from \"lodash/kebabCase\";\n\nimport Tag from \"../components/Tag\";\nimport Layout from \"../components/layout\";\n\nconst TagsPage = ({\n  data: {\n    allMdx: { group },\n    site: {\n      siteMetadata: { title },\n    },\n  },\n}) => {\n  return (\n    <Layout location={`/tags`} title={title}>\n      <div className=\"mt-16\">\n        <Helmet title={title} />\n        <div>\n          <h1 itemProp=\"headline\">\n            <div className=\"text-3xl text-center text-gray-700\">\n              <span className=\"px-2\">Tags</span>\n            </div>\n          </h1>\n          <div className=\"px-4 sm:px-8 md:px-0 my-16 max-w-prose mx-auto flex flex-wrap justify-center\">\n            {group.map((tag) => (\n              <Tag\n                name={tag.fieldValue}\n                link={`/tags/${kebabCase(tag.fieldValue)}/`}\n                count={tag.totalCount}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nTagsPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      group: PropTypes.arrayOf(\n        PropTypes.shape({\n          fieldValue: PropTypes.string.isRequired,\n          totalCount: PropTypes.number.isRequired,\n        }).isRequired\n      ),\n    }),\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n      }),\n    }),\n  }),\n};\n\nexport default TagsPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(limit: 2000) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}